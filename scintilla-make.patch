--- scintilla3211/gtk/makefile.orig	2020-09-12 17:33:27.000000000 +0200
+++ scintilla3211/gtk/makefile	2025-07-02 22:22:18.758750143 +0200
@@ -9,7 +9,7 @@
 
 .PHONY: all clean analyze depend
 
-.SUFFIXES: .cxx .c .o .h .a .list
+.SUFFIXES: .cxx .c .o .h .a .lo .la .list
 
 srcdir ?= .
 basedir = $(srcdir)/..
@@ -59,7 +59,7 @@ DEL = del /q
 else
 DEL = rm -f
 endif
-COMPLIB=$(basedir)/bin/scintilla.a
+COMPLIB=$(basedir)/bin/libscintilla.la
 
 vpath %.h $(srcdir) $(basedir)/src $(basedir)/include $(basedir)/lexlib
 vpath %.c $(srcdir)
@@ -74,24 +74,24 @@ DEFINES += -DNO_CXX11_REGEX
 endif
 
 DEFINES += -D$(if $(DEBUG),DEBUG,NDEBUG)
-BASE_FLAGS += $(if $(DEBUG),-g,-Os)
+BASE_FLAGS += $(OPTFLAGS)
 
 CXX_BASE_FLAGS =--std=c++11 $(BASE_FLAGS)
 CXX_ALL_FLAGS =$(DEFINES) $(INCLUDES) $(CXX_BASE_FLAGS) $(CONFIG_FLAGS)
 ifdef LPEG_LEXER
 CXX_BASE_FLAGS += -DLPEG_LEXER -I ../lua/src
 LUA_CFLAGS:=-fPIC -std=c99 -pedantic -Wall -I ../lua/src -DLUA_USE_POSIX -DLUA_USE_DLOPEN
-LUA_OBJS:=lapi.o lcode.o lctype.o ldebug.o ldo.o ldump.o lfunc.o lgc.o linit.o \
-         llex.o lmem.o lobject.o lopcodes.o lparser.o lstate.o lstring.o \
-         ltable.o ltm.o lundump.o lvm.o lzio.o \
-         lauxlib.o lbaselib.o lbitlib.o lcorolib.o ldblib.o liolib.o \
-         lmathlib.o loadlib.o loslib.o lstrlib.o ltablib.o lutf8lib.o \
-         lpcap.o lpcode.o lpprint.o lptree.o lpvm.o
+LUA_OBJS:=lapi.lo lcode.lo lctype.lo ldebug.lo ldo.lo ldump.lo lfunc.lo lgc.lo linit.lo \
+         llex.lo lmem.lo lobject.lo lopcodes.lo lparser.lo lstate.lo lstring.lo \
+         ltable.lo ltm.lo lundump.lo lvm.lo lzio.lo \
+         lauxlib.lo lbaselib.lo lbitlib.lo lcorolib.lo ldblib.lo liolib.lo \
+         lmathlib.lo loadlib.lo loslib.lo lstrlib.lo ltablib.lo lutf8lib.lo \
+         lpcap.lo lpcode.lo lpprint.lo lptree.lo lpvm.lo
 endif
 
 
 CONFIG_FLAGS:=$(shell $(PKG_CONFIG) --cflags $(GTK_VERSION))
-MARSHALLER=scintilla-marshal.o
+MARSHALLER=scintilla-marshal.lo
 
 all: $(COMPLIB)
 
@@ -100,10 +100,14 @@ clean:
 
 %.o: %.cxx
 	$(CXX) $(CPPFLAGS) $(CXX_ALL_FLAGS) $(CXXFLAGS) -c $<
+%.lo: %.cxx
+	libtool --tag=CXX --mode=compile $(CXX) $(CPPFLAGS) $(CXX_ALL_FLAGS) $(CXXFLAGS) -c $<
 %.o: %.c
 	$(CC) $(CPPFLAGS) $(DEFINES) $(INCLUDES) $(CONFIG_FLAGS) $(BASE_FLAGS) $(CFLAGS) -w -c $<
-$(LUA_OBJS): %.o: ../lua/src/%.c
-	$(CC) $(LUA_CFLAGS) $(CFLAGS) -c $<
+%.lo: %.c
+	libtool --tag=CC --mode=compile $(CC) $(CPPFLAGS) $(DEFINES) $(INCLUDES) $(CONFIG_FLAGS) $(BASE_FLAGS) $(CFLAGS) -w -c $<
+$(LUA_OBJS): %.lo: ../lua/src/%.c
+	libtool --tag=CC --mode=compile $(CC) $(LUA_CFLAGS) $(CFLAGS) -c $<
 
 GLIB_GENMARSHAL = glib-genmarshal
 GLIB_GENMARSHAL_FLAGS = --prefix=scintilla_marshal
@@ -119,62 +123,65 @@ analyze:
 depend deps.mak:
 	python DepGen.py
 
-LEX_OBJS:=$(addsuffix .o,$(basename $(sort $(notdir $(wildcard $(basedir)/lexers/Lex*.cxx)))))
+LEX_OBJS:=$(addsuffix .lo,$(basename $(sort $(notdir $(wildcard $(basedir)/lexers/Lex*.cxx)))))
 
 # Required for base Scintilla
 SRC_OBJS = \
-	AutoComplete.o \
-	CallTip.o \
-	CaseConvert.o \
-	CaseFolder.o \
-	CellBuffer.o \
-	CharacterCategory.o \
-	CharacterSet.o \
-	CharClassify.o \
-	ContractionState.o \
-	DBCS.o \
-	Decoration.o \
-	Document.o \
-	EditModel.o \
-	Editor.o \
-	EditView.o \
-	Indicator.o \
-	KeyMap.o \
-	LineMarker.o \
-	MarginView.o \
-	PerLine.o \
-	PositionCache.o \
-	RESearch.o \
-	RunStyles.o \
-	Selection.o \
-	Style.o \
-	UniConversion.o \
-	UniqueString.o \
-	ViewStyle.o \
-	XPM.o
+	AutoComplete.lo \
+	CallTip.lo \
+	CaseConvert.lo \
+	CaseFolder.lo \
+	CellBuffer.lo \
+	CharacterCategory.lo \
+	CharacterSet.lo \
+	CharClassify.lo \
+	ContractionState.lo \
+	DBCS.lo \
+	Decoration.lo \
+	Document.lo \
+	EditModel.lo \
+	Editor.lo \
+	EditView.lo \
+	Indicator.lo \
+	KeyMap.lo \
+	LineMarker.lo \
+	MarginView.lo \
+	PerLine.lo \
+	PositionCache.lo \
+	RESearch.lo \
+	RunStyles.lo \
+	Selection.lo \
+	Style.lo \
+	UniConversion.lo \
+	UniqueString.lo \
+	ViewStyle.lo \
+	XPM.lo
 
 # Required by lexers
 LEXLIB_OBJS = \
-	Accessor.o \
-	Catalogue.o \
-	DefaultLexer.o \
-	ExternalLexer.o \
-	LexerBase.o \
-	LexerModule.o \
-	LexerSimple.o \
-	PropSetSimple.o \
-	StyleContext.o \
-	WordList.o
+	Accessor.lo \
+	Catalogue.lo \
+	DefaultLexer.lo \
+	ExternalLexer.lo \
+	LexerBase.lo \
+	LexerModule.lo \
+	LexerSimple.lo \
+	PropSetSimple.lo \
+	StyleContext.lo \
+	WordList.lo
 
 GTK_OBJS = \
-	ScintillaBase.o \
-	PlatGTK.o \
-	ScintillaGTK.o \
-	ScintillaGTKAccessible.o
+	ScintillaBase.lo \
+	PlatGTK.lo \
+	ScintillaGTK.lo \
+	ScintillaGTKAccessible.lo
 
 $(COMPLIB): $(SRC_OBJS) $(LEXLIB_OBJS) $(GTK_OBJS) $(MARSHALLER) $(LEX_OBJS) $(LUA_OBJS)
-	$(AR) $(ARFLAGS) $@ $^
-	$(RANLIB) $@
+	libtool --tag=CXX --mode=link $(CXX) -o $@ $^ -rpath $(libdir) -version-info 3:0:0 $(shell $(PKG_CONFIG) --libs $(GTK_VERSION))
+
+install: $(COMPLIB)
+	install -d $(DESTDIR)$(libdir)
+	libtool --mode=install install $(COMPLIB) $(DESTDIR)$(libdir)
 
 # Automatically generate header dependencies with "make deps"
 include deps.mak
