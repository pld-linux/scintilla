diff -urNbB scintilla.org/gtk/makefile scintilla/gtk/makefile
--- scintilla.org/gtk/makefile	2005-05-27 13:29:44.000000000 +0200
+++ scintilla/gtk/makefile	2005-08-27 15:34:00.961960088 +0200
@@ -7,7 +7,7 @@
 # To force GTK+ 2 build, define GTK2 on the make command line.
 # To force GTK+ 1 build, define GTK1 on the make command line.
 
-.SUFFIXES: .cxx .c .o .h .a
+.SUFFIXES: .cxx .c .o .h .a .lo .la
 CC = g++
 CCOMP = gcc
 AR = ar
@@ -17,7 +17,7 @@
 RANLIB = ranlib
 endif
 
-COMPLIB=../bin/scintilla.a
+COMPLIB=../bin/libscintilla.la
 
 vpath %.h ../src ../include
 vpath %.cxx ../src
@@ -32,23 +32,23 @@
 endif
 
 ifdef DEBUG
-CXXFLAGS=-DDEBUG -g $(CXXBASEFLAGS) $(THREADFLAGS)
+CXXFLAGS=-DDEBUG $(CXXBASEFLAGS) $(THREADFLAGS)
 else
-CXXFLAGS=-DNDEBUG -Os $(CXXBASEFLAGS) $(THREADFLAGS)
+CXXFLAGS=-DNDEBUG $(CXXBASEFLAGS) $(THREADFLAGS)
 endif
 
 # If explicit setting of GTK1 or GTK2 then use that else look for
 # pkg-config which is an OK indication that GTK2 is available
 ifdef GTK2
-CONFIGFLAGS=pkg-config --cflags gtk+-2.0
-MARSHALLER=scintilla-marshal.o
+CONFIGFLAGS=pkg-config --cflags gtk+-2.0 gthread-2.0
+MARSHALLER=scintilla-marshal.lo
 else
 ifdef GTK1
 CONFIGFLAGS=gtk-config --cflags
 else
 ifneq (,$(findstring /,$(shell whereis pkg-config)))
-CONFIGFLAGS=pkg-config --cflags gtk+-2.0
-MARSHALLER=scintilla-marshal.o
+CONFIGFLAGS=pkg-config --cflags gtk+-2.0 gthread-2.0
+MARSHALLER=scintilla-marshal.lo
 else
 CONFIGFLAGS=gtk-config --cflags
 endif
@@ -60,34 +60,42 @@
 .c.o:
 	$(CCOMP) `$(CONFIGFLAGS)` $(CXXFLAGS) -w -c $<
 
+.cxx.lo:
+	libtool --tag=CXX --mode=compile $(CC) `$(CONFIGFLAGS)` $(CXXFLAGS) -c $<
+.c.lo:
+	libtool --tag=CC --mode=compile $(CCOMP) `$(CONFIGFLAGS)` $(CXXFLAGS) -w -c $<
+	
 #++Autogenerated -- run src/LexGen.py to regenerate
 #**LEXOBJS=\\\n\(\*.o \)
 LEXOBJS=\
-LexAda.o LexAPDL.o LexAsm.o LexAsn1.o LexAU3.o LexAVE.o LexBaan.o LexBash.o \
-LexBasic.o LexBullant.o LexCaml.o LexCLW.o LexConf.o LexCPP.o LexCrontab.o \
-LexCsound.o LexCSS.o LexEiffel.o LexErlang.o LexEScript.o LexFlagship.o \
-LexForth.o LexFortran.o LexGui4Cli.o LexHaskell.o LexHTML.o LexKix.o LexLisp.o \
-LexLout.o LexLua.o LexMatlab.o LexMetapost.o LexMMIXAL.o LexMPT.o LexMSSQL.o \
-LexNsis.o LexOthers.o LexPascal.o LexPB.o LexPerl.o LexPOV.o LexPS.o \
-LexPython.o LexRebol.o LexRuby.o LexScriptol.o LexSmalltalk.o LexSpecman.o \
-LexSQL.o LexTADS3.o LexTeX.o LexVB.o LexVerilog.o LexVHDL.o LexYAML.o
+LexAda.lo LexAPDL.lo LexAsm.lo LexAsn1.lo LexAU3.lo LexAVE.lo LexBaan.lo LexBash.lo \
+LexBasic.lo LexBullant.lo LexCaml.lo LexCLW.lo LexConf.lo LexCPP.lo LexCrontab.lo \
+LexCsound.lo LexCSS.lo LexEiffel.lo LexErlang.lo LexEScript.lo LexFlagship.lo \
+LexForth.lo LexFortran.lo LexGui4Cli.lo LexHaskell.lo LexHTML.lo LexKix.lo LexLisp.lo \
+LexLout.lo LexLua.lo LexMatlab.lo LexMetapost.lo LexMMIXAL.lo LexMPT.lo LexMSSQL.lo \
+LexNsis.lo LexOthers.lo LexPascal.lo LexPB.lo LexPerl.lo LexPOV.lo LexPS.lo \
+LexPython.lo LexRebol.lo LexRuby.lo LexScriptol.lo LexSmalltalk.lo LexSpecman.lo \
+LexSQL.lo LexTADS3.lo LexTeX.lo LexVB.lo LexVerilog.lo LexVHDL.lo LexYAML.lo
 #--Autogenerated -- end of automatically generated section
 
 all: $(COMPLIB)
 
 clean:
-	rm -f *.o $(COMPLIB)
+	rm -f *.o *.lo $(COMPLIB)
 
 deps:
 	$(CC) -MM `$(CONFIGFLAGS)` $(CXXFLAGS) *.cxx ../src/*.cxx >deps.mak
 
-$(COMPLIB): DocumentAccessor.o WindowAccessor.o KeyWords.o StyleContext.o Document.o CallTip.o \
-	ScintillaBase.o ContractionState.o Editor.o ExternalLexer.o PropSet.o PlatGTK.o \
-	KeyMap.o LineMarker.o ScintillaGTK.o CellBuffer.o ViewStyle.o \
-	RESearch.o Style.o Indicator.o AutoComplete.o UniConversion.o XPM.o \
+$(COMPLIB): DocumentAccessor.lo WindowAccessor.lo KeyWords.lo StyleContext.lo Document.lo CallTip.lo \
+	ScintillaBase.lo ContractionState.lo Editor.lo ExternalLexer.lo PropSet.lo PlatGTK.lo \
+	KeyMap.lo LineMarker.lo ScintillaGTK.lo CellBuffer.lo ViewStyle.lo \
+	RESearch.lo Style.lo Indicator.lo AutoComplete.lo UniConversion.lo XPM.lo \
 	$(MARSHALLER) $(LEXOBJS)
-	$(AR) rc $@ $^
-	$(RANLIB) $@
+	libtool --tag=CXX --mode=link $(CC) -o $@ $^ -rpath $(libdir) `$(LIBCONFIG)`
+
+install: $(COMPLIB)
+	install -d $(DESTDIR)$(libdir)
+	libtool --mode=install install $(COMPLIB) $(DESTDIR)$(libdir)
 
 # Automatically generate header dependencies with "make deps"
 include deps.mak
